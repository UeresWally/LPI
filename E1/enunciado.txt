Comparar dois paradigmas de programação e mostrar um trecho de cada

Paradigma Orientado a Objetos

    A programação Orientada a Objetos transforma estruturas de dados em Objetos com o objetivo de ter representações mais próximas da realidade.
    Cada objetivo possui suas características e comportamento, atributos e métodos respectivamente, e são estruturados em uma classe.
    A classe é o corpo/tipo do objeto, um exemplo de classe seria Carro que tem como atributos: marca, modelo, chassis, cor, placa, etc. e comportamentos: andar, frear, etc. e um exemplo de objeto é uno, que é um Carro, mas é diferente de um objeto gol.
    Os objetos também podem ter outras classificações utilizando uma estrutura de herança (grande importância na programação).
    Por exemplo: temos a classe Carro e a classe Fiat, a classe Fiat possui todos os atributos e comportamentos de Carro, então podemos dizer que Fiat "é" um carro, essa classe então herda essas características de Carro.
    Outra classificação é feita utilizando uma estrutura chamada de interface. Nesse caso dizemos que um objeto "faz" determinada coisa.
    No mesmo exemplo anterior: podemos criar uma interface e chamá-la de AbrirPortas, a classe Fiat pode implementar essa interface.
    Assim dizemos que a classe Fiat 'É' um Carro e 'pode' AbrirPortas.
    Esses objetos interagem entre si e criam um programa funcional.

    Exemplo de código em Java:

    public class Carro {
        // atributos
        private String marca;
        private String modelos;
        private String chassis;
        private int ano;
        // stuff..

        // métodos/comportamentos
        public void frear() {}

        public void andarParaFrente() {}
    }

Paradigma Imperativo

    A programação imperativa baseia-se no modo de funcionamento do computador,isto significa que ela tem execução sequencial baseada em comandos e no           armazenamento de dados alteráveis (variáveis) conceitos esses que são a forma como os computadores executam os programas em linguagem de máquina.
    Linguagens imperativas são baseadas em 3 conceitos:
        Variáveis: que são locação na memória que correspondem a um endereço e um valor de armazenamento.
        Comando de atribuição: esse introduz uma dependencia de ordem no programa, o valor de uma variável é diferente antes e depois de um comando de atribuição.
        Sequência: o significado do programa depende da forma que os comandos são escritos e executados.
    As funções em linguaegm de programação imperativa, são descritos como algoritmos que especificam como processar um intervalo de valores, por exemplo, laços     são  usados  para  varrer  uma  seqüência  de  localizações  de  memória  tal  como  vetores,  ou  para  acumular  umvalor em uma variável específica.
    Três exemplos de linguagens imperativas são, Fortran, Pascal, C.
    Exemplo em Pascal:
        Neste programa o computador mostra na tela todos os caracteres do código ASCII. 
        
            PROGRAM Ascii(INPUT,OUTPUT);
            VAR i,n,val:INTEGER;
                    c:CHAR;
            BEGIN
                 n:=0;
                 FOR i:=0 TO 256 DO
                 BEGIN
                      n:=n+1;
                      WRITELN(i,' -> ',CHR(i),' ');
                      IF n=22 THEN BEGIN
                         WRITELN('c para continuar');
                         REPEAT
                         READLN(c);
                         UNTIL c='c';
                         n:=0;
                         END;
                 END;
                 READLN
            END.
